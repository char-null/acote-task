// Mocks generated by Mockito 5.4.4 from annotations
// in acote_task/test/detail_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:acote_task/models/user_detail_model.dart' as _i5;
import 'package:acote_task/repositories/detail_repository.dart' as _i4;
import 'package:acote_task/services/acote_api_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAcoteApiService_0 extends _i1.SmartFake
    implements _i2.AcoteApiService {
  _FakeAcoteApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AcoteApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAcoteApiService extends _i1.Mock implements _i2.AcoteApiService {
  MockAcoteApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<T>> get<T>(
    String? path,
    T Function(Map<String, dynamic>)? fromJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            path,
            fromJson,
          ],
        ),
        returnValue: _i3.Future<List<T>>.value(<T>[]),
      ) as _i3.Future<List<T>>);
}

/// A class which mocks [DetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailRepository extends _i1.Mock implements _i4.DetailRepository {
  MockDetailRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AcoteApiService get acoteApiService => (super.noSuchMethod(
        Invocation.getter(#acoteApiService),
        returnValue: _FakeAcoteApiService_0(
          this,
          Invocation.getter(#acoteApiService),
        ),
      ) as _i2.AcoteApiService);

  @override
  _i3.Future<List<_i5.UserDetailModel>> getUserDetailInfo(
          {required String? login}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserDetailInfo,
          [],
          {#login: login},
        ),
        returnValue: _i3.Future<List<_i5.UserDetailModel>>.value(
            <_i5.UserDetailModel>[]),
      ) as _i3.Future<List<_i5.UserDetailModel>>);
}
